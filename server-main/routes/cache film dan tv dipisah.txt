const express = require("express");
const axios = require("axios");
const redis = require("redis"),
  client = redis.createClient();
const router = express.Router();

router.get("/", function(req, res, next) {
  let errMsg = [];
  let toClient = {
    movies: {},
    series: {}
  };

  client.get("movieCache", new Promise((resolve, reject)=>{
    return (err, existingCache) => {
    if (existingCache) {
      toClient.movies = JSON.parse(existingCache);
    } else {
      try {
        let { data } = await axios.get("http://localhost:3001");
        let info;
        if (data.length < 1) {
          info = "no data available";
        } else {
          info = "movies found";
        }
        toClient.movies = {
          info,
          data
        };
        resolve(toClient)
        client.set("movieCache", JSON.stringify(toClient.movies), "EX", 15);
      } catch (err) {
        reject(err.message)
      }
    }
  }
  }));

  client.get("tvCache", async function(err, existingCache) {
    if (existingCache) {
      toClient.series = JSON.parse(existingCache);
    } else {
      try {
        let { data } = await axios.get("http://localhost:3002");
        let info;
        if (data.length < 1) {
          info = "no data available";
        } else {
          info = "tv series found";
        }
        toClient.series = {
          info,
          data
        };
        client.set("tvCache", JSON.stringify(toClient.series), "EX", 15);
      } catch (err) {
        errMsg.push(err.message);
      }
    }
  });


  if (errMsg.length == 0) {

    res.status(200).json(toClient);
  } else {
    res.status(400).json({ errors: errMsg });
  }
});

module.exports = router;
